<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jk.dao.PersonnelMapper" >
  <resultMap id="BaseResultMap" type="com.jk.entity.Personnel" >
    <id column="personnel_id" property="personnelId" jdbcType="INTEGER" />
    <result column="personnel_name" property="personnelName" jdbcType="VARCHAR" />
    <result column="job_application" property="jobApplication" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="info_sources" property="infoSources" jdbcType="VARCHAR" />
    <result column="feedback" property="feedback" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    personnel_id, personnel_name, job_application, telephone, info_sources, feedback, 
    status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_personnel
    where personnel_id = #{personnelId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_personnel
    where personnel_id = #{personnelId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jk.entity.Personnel" >
    insert into t_personnel (personnel_id, personnel_name, job_application, 
      telephone, info_sources, feedback, 
      status)
    values (#{personnelId,jdbcType=INTEGER}, #{personnelName,jdbcType=VARCHAR}, #{jobApplication,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{infoSources,jdbcType=VARCHAR}, #{feedback,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jk.entity.Personnel" >
    insert into t_personnel
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="personnelId != null" >
        personnel_id,
      </if>
      <if test="personnelName != null" >
        personnel_name,
      </if>
      <if test="jobApplication != null" >
        job_application,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="infoSources != null" >
        info_sources,
      </if>
      <if test="feedback != null" >
        feedback,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="personnelId != null" >
        #{personnelId,jdbcType=INTEGER},
      </if>
      <if test="personnelName != null" >
        #{personnelName,jdbcType=VARCHAR},
      </if>
      <if test="jobApplication != null" >
        #{jobApplication,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="infoSources != null" >
        #{infoSources,jdbcType=VARCHAR},
      </if>
      <if test="feedback != null" >
        #{feedback,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk.entity.Personnel" >
    update t_personnel
    <set >
      <if test="personnelName != null" >
        personnel_name = #{personnelName,jdbcType=VARCHAR},
      </if>
      <if test="jobApplication != null" >
        job_application = #{jobApplication,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="infoSources != null" >
        info_sources = #{infoSources,jdbcType=VARCHAR},
      </if>
      <if test="feedback != null" >
        feedback = #{feedback,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where personnel_id = #{personnelId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk.entity.Personnel" >
    update t_personnel
    set personnel_name = #{personnelName,jdbcType=VARCHAR},
      job_application = #{jobApplication,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      info_sources = #{infoSources,jdbcType=VARCHAR},
      feedback = #{feedback,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where personnel_id = #{personnelId,jdbcType=INTEGER}
  </update>


  <select id="selectcount" resultType="java.lang.Long">
    select count(*) from t_personnel
    <include refid="mysql"></include>
  </select>

  <select id="listAll" resultType="Personnel">
    <bind name="key_off" value="(currPage -1)*pageSize"/>
    select * from t_personnel
    <include refid="mysql"></include>
    limit ${key_off},${pageSize}
  </select>
 <sql id="mysql">
   <where>
     <if test="per.personnelName!=null and per.personnelName!=''">
       and personnel_name like '%${per.personnelName}%'
     </if>
   </where>
 </sql>
  <delete id="delPer" parameterType="string">
    delete from t_personnel where personnel_id in (${id})
  </delete>
</mapper>